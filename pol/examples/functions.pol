/* Functions are a way of writing code to do something once
   then using that same code over and over again whenever
   you need to. Scope is the concept of who can see what
   variables */

main(){

    variable = "main"
    println("We are in function main()")

    foo()
    println("Back in main()")

    bar(2)
    bar("Value " + 2)

    result = addAndMultply(4, 2)
    println(result)

    variable = "Text"
    passByValue(variable)
    println("Variable after pass by value: " + variable)

    passByReference(variable)
    println("Variable after pass by refernce: " + variable)

}

/* This a function! Any code written between the curly brackets
   will be executed every time someone writes the statement foo() */

foo(){
    println("We are in function foo()")

}

/* This is another function. This function requires a value
   to be given to it inorder for it to work. This value passed
   to the function is called a parameter */

bar(parameter1){
    println(parameter1 + " from bar()")
}

/* Functions can take any number of parameters. Functions can also
   return values this is how functions share information */

addAndMultply(x,y){

    result = x + y * x + y
    return result
}

/* Functions by default take parameters by value meaning
   if you change its value in the called function you
   will not change the value in the callee. If you want
   that functionality you can make a parameter pass by reference
   which means it will change the value in the callee and the caller*/

passByValue(a){
    a = "Different"
    println("Item in function is: " + a)
}

passByReference(&a){
    a = "Different"
    println("Item in function is: " + a)
}
